TITLE::CodexHybrid
summary::Base for developing composites that straddle client-server divide.
categories::Libraries>CodexIan
related::Classes/CodexComposite, Guides/CodexIan
keyword::hybrid, compositing, codexian, codexian hybrid 

DESCRIPTION:: 

CodexHybrid aims to streamline the development of hybrid composite classes, namely those that straddle SuperCollider's link::Guides/ClientVsServer##client-server architecture.:: Specifically, CodexHybrid manages the loading and unloading of link::Classes/SynthDef##SynthDefs:: so that other CodexHybrid-typed classes can easily call related link::Classes/Synth##Synths:: with minimal issues relating to link::Guides/Sync-Async##asynchronicity between the client and the server::. It does this by combining the procedures of link::Classes/CodexComposite:: with the services of link::Classes/SynthDefProcessor::.

note::Like CodexComposite, CodexHybrid itself should not be instanced. Doing so will probably throw an error. To see the class's features in action, refer to link::Classes/HybridExample::.
::
CLASSMETHODS::

copymethod::CodexComposite *new
private::new
private::notAt
private::processOff
private::processOn
private::todo

INSTANCEMETHODS::

private::initHybrid
private::processSynthDefs
private::findSynthDefs
private::nameSynthDefs
private::tag
private::stripTag

private::formatName
method::synthDefs
Gets a collection of the symbol names of the SynthDef managed by the class. 
method:: server
private::tag
private::checkDictionary
private::checkModule
private::initHybrid
private::removeSynthDefs
private::initComposite

subsection::From CodexComposite
copymethod:: CodexComposite -moduleFolder
private::reloadScripts
copymethod:: CodexComposite -reloadScripts
copyMethod:: CodexComposite -modules
copyMethod:: CodexComposite -moduleSet
