TITLE::Hybrid
summary::Base for developing composites that straddle client-server divide.
categories::Libraries>CodexIan>Composites
related::Classes/Composite, Guides/MusicCompositing
keywords::hybrid, compositing, codexian, composition, codexian composite

DESCRIPTION:: 

teletype::Hybrid:: aims to streamline the development of hybrid composite classes, namely those that straddle SuperCollider's link::Guides/ClientVsServer##client-server architecture.:: Specifically, Hybrid manages the loading and unloading of link::Classes/SynthDef##SynthDefs:: so that other Hybrid-typed classes can easily call related link::Classes/Synth##Synths:: with minimal issues relating to link::Guides/Sync-Async##asynchronicity between the client and the server::. It does this by combining the procedures of link::Classes/Composite:: with the services of link::Classes/SynthDefProcessor::.

note::Like teletype::Composite::, teletype::Hybrid:: itself should not be instanced. Doing so will probably throw an error. To see the class's features in action, refer to link::Classes/HybridExample::.
::
CLASSMETHODS::

copymethod::Composite *new
private::new

private::initHybrid
private::subDictionaryExists
private::addSubDictionary
private::addToDictionary
private::formatString
private::processSynthDefs
private::notInDictionary

method::dictionary
Gets the dictionary containing teletype::SynthDef:: that teletype::Hybrid:: is currently managing. 

method::freeSynthDefs
Clears the class's sub-dictionary, freeing its teletype::SynthDefs:: too.

method::clearDictionary
Frees all sub-dictionaries maintained by teletype::Hybrid::, freeing the teletype::SynthDefs:: they store.

subsection::From Composite
copymethod:: Composite *classFolder
copymethod:: Composite *moduleSets
copymethod:: Composite *directory
private::establish
INSTANCEMETHODS::

private::initHybrid
private::makeSynthDefs
private::addToDictionary

method::formatName
Formats a teletype::SynthDef's:: link::Classes/SynthDef#-name#name:: to include the link::Classes/Class#-name#name:: of the class. This is used internally to prevent clashes between names. However, it can be useful for calling teletype::Synths:: when scripting.

method:: server
private::tag
private::checkDictionary
private::checkModule
private::loadModules

subsection::From Composite
copymethod:: Composite -moduleFolder
copymethod:: Composite -loadModules
copyMethod:: Composite -modules
copyMethod:: Composite -moduleSet
private::initComposite
