TITLE:: CodexPaths
summary:: Configures default folder paths via persistent storage.
categories:: Libraries>CodexIan
related:: Classes/CodexIncrementer
keyword:: persistent, codexian, codexian path, utilities, codexian utilities
DESCRIPTION::

CodexPaths is used for managing paths to files or folders using persistent storage. As a result, information stored through the class's interface will persist across sessions of the link::Classes/Interpreter::.

CLASSMETHODS::

method::at
Gets the path stored at the key symbol. 
argument::key
A symbol.

method::setAt
Sets the path stored at the key symbol. 
argument::newpath
A string representing a new path. 
argument::key
A symbol.

returns:: 
The path that was set.

method::removeAt
Removes the path at the symbol key from storage. 
argument::key
A symbol.

method::keys
Gets the set of keys at which paths are stored. 

private::defaultPath
private::checkDictionary
private::parse
private::pathToQuark
private::stroagePath
private::write
private::storagePath

EXAMPLES::
code::
//Set a path using the key \test.
CodexPaths.setAt("~/Documents/Example/Path".standardizePath, \test); 

//Get the path from the same key.
CodexPaths.at(\test).postln; 

//If you want...reboot the interpreter (wiping SC's memory) and try again.
//The path should have persisted.
CodexPaths.at(\test).postln; 

//Change the path and reboot again to see that configurations stick.
CodexPaths.setAt("~/Whatever/Path".standardizePath, \test);

//Add a new key.
CodexPaths.setAt("~/New/Path".standardizePath, \test2); 

//Get the keys associated with the paths stored.
CodexPaths.keys.postln; 

//Remove the test paths from storage.
CodexPaths.removeAt(\test);
CodexPaths.removeAt(\test2);

//See, they're gone!
CodexPaths.keys.postln; 

//Test.
CodexPaths.at(\test); 
CodexPaths.at(\test2);
::
