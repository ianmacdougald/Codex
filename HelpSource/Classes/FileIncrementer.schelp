TITLE:: FileIncrementer
summary::creates incrementally unique filenames.
categories::Libraries>CodexIan>File Management
related::Classes/PathStorage

DESCRIPTION::
This class creates incrementally unique filenames stored in a specified folder.

CLASSMETHODS::
method::new
argument::fileTemplate
A string representing the filename that this class should increment
argument::folder
A string representing the folderpath where the class will look for increments of the file template.

INSTANCEMETHODS::
method::increment
Increment the filename and return it.

method::extension
Get and set the extension that is added to the end of the file.

method::fileTemplate
Get and set the template from which filenames are incremented.

method::folder
Get and set the folder where the instance looks for created filenames to increment.

method::currentIncrement
Get the current incrementer value (i.e. the last one that was used to format a file).

private::prFindNextFileName
private::prFormatFileName
EXAMPLES::
code::
(
//This returns an incremented version of the file template
f = FileIncrementer.new(
	"some-file.wav",
	"~/Desktop".standardizePath
);
f.increment.postln;
)

//We do not continue to increment if the filepath does not exist (yet)
f.increment.postln;

(
//But if the file is made...
s.waitForBoot({
	fork{
		var synth;
		s.record(f.increment);
		s.sync;
		synth = {SinOsc.ar(440)}
		.play.onFree({s.stopRecording});
		0.1.wait;
		synth.free;
	};
});
)

//We increment again.
f.increment.postln;

(
//If a file is added with a number at the end of it, incrementing starts from there.
f = FileIncrementer.new(
	"some-other-file-1.wav",
	"~/Desktop".standardizePath
);
f.increment.postln;
)
::
